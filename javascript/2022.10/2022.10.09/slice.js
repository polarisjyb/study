/*
  slice() 는 인수로 전달된 범위의 요소들을 복사하여 배열로 반환한다. 원본 배열은 변경되지 않는다.
  이름이 유사한 splice 메서드는 원본 배열을 변경하므로 주의한다.

  slice() 는 두 개의 매개변수를 갖는다.
    1. start: 복사를 시작한 인덱스다. 음수인 경우 배열의 끝에서의 인덱스를 나타낸다. 예를 들어, slice(-2)는 배열의 마지막 두 개 의 요소를 복사하여 배열로 반환한다.
    2. end: 복사를 종료할 인덱스다. 이 인덱스에 해당하는 요소는 복사되지 않는다. end는 생략 가능하며 생략 시 기본값은 length 프로퍼티 값이다.
*/

const arr = [1, 2, 3];

// arr[0] 부터 arr[1] 이전 (arr[1] 미포함) 까지 복사하여 반환한다.
console.log(arr.slice(0, 1)); // [1]

// arr[1] 부터 arr[2] 이전 (arr[2] 미포함) 까지 복사하여 반환한다.
console.log(arr.slice(1, 2)); // [2]

// 원본은 변경되지 않는다.
console.log(arr); // [1, 2, 3]

/*
  slice 메서드의 두 번째 인수(end)를 생략하면 첫 번째 인수(start)로 전달받은 인덱스부터 모든 요소를 복사하여 배열로 반환한다.
*/
const arr1 = [1, 2, 3];

// arr[1] 부터 이후의 모든 요소를 복사하여 반환한다.
console.log(arr.slice(1)); // [2, 3]

/*
  slice 메서드의 첫 번째 인수가 음수인 경우 배열의 끝에서부터 요소를 복사하여 배열로 반환한다.
*/
const arr2 = [1, 2, 3,];

// 배열의 끝에서부터 요소를 한 개 복사하여 반환한다.
console.log(arr.slice(-1)); // [3]

// 배열의 끝에서부터 요소를 두 개 복사하여 반환한다.
console.log(arr.slice(-2)); // [2, 3]

/*
  slice 메서드의 인수를 모두 생략하면 원본 배열의 복사본을 생성하여 반환한다.
*/
const arr3 = [1, 2, 3, 4];

// 인수를 모두 생략하면 원본 배열의 복사본을 생성하여 반환한다.
const copy = arr3.slice();
console.log(copy);  // [1, 2, 3, 4]
console.log(copy === arr3); // false



