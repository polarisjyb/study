/*
  splice() 는 원본 배열의 중간에 요소를 추가하거나 중간에 있는 요소를 제거하는 경우 splice 메서드를 사용한다. splice 메서드는 3개의 매개변수가 있으며 원본 배열을 직접 변경한다.

1. start: 원본 배열의 요소를 제거하기 시작할 인덱스다. start만 지정하면 원본 배열의 start부터 모든 요소를 제거한다. start가 음수인 경우 배열의 끝에서의 인덱스를 나타낸다. 만약 start가 -1이면 마지막 요소를 가리키고 -n이면 마지막에서 n번째 요소를 가리킨다.\
2. deleteCount: 원본 배열의 요소를 제거하기 시작할 인덱스인 start부터 제거할 요소의 개수다. deleteCount가 0인 경우 아무런 요소도 제거되지 않는다
3. items: 제거한 위치에 삽입할 요소들의 목록이다. 생략할 경우 원본 배열에서 요소들을 제거하기만 한다.

*/

const arr = [1, 2, 3, 4];

const result1 = arr.splice(1, 3, 20, 30);

// 제거된 요소가 배열로 반환된다.
console.log(result1); // [2, 3, 4]

// splice 메서드는 원본 배열을 직접 변경한다.
console.log(arr); // [1, 20, 30]

const result2 = arr.splice(1, 2, 2, 3);

// 제거된 요소가 배열로 반환횐다.
console.log(result2); // [20, 30]

// splice 메서드는 원본 배열을 직접 변경한다.
console.log(arr); // [1, 2, 3]

/*
  splice 메서드의 두 번째 인수, 즉 제거할 요소의 개수를 0으로 지정하면 아무런 요소도 제거하지 않고 새로운 요소들을 삽입한다.
*/
const arr3 = [1, 2, 3, 4];

// 원본 배열의 인덱스 1부터 0개의 요소를 제거하고 그 자리에 새로운 요소 200을 삽입한다.
const result3 = arr3.splice(1, 0, 200);

// 원본 배열이 변경된다.
console.log(arr3);  // [1, 200, 2, 3, 4]

// 제거한 요소가 배열로 반환된다.
console.log(result3);  // []

/*
  splice 메서드의 세 번째 인수, 즉 제거한 위치에 추가할 요소들의 목록을 전달하지 않으면 원본 배열에서 지정된 요소를 제거하기만 한다.
*/

const arr4 = [1, 2, 3, 4];

// 원본 배열의 인덱스 0부터 2개의 요소를 제거한다.
const result4 = arr4.splice(0, 2);

// 원본 배열이 변경된다.
console.log(arr4);  //  [3, 4]

// 제거한 요소가 배열로 반환된다.
console.log(result4); [1, 2]

/*
  splice 메서드의 두 번째 인수, 즉 제거할 요소의 개수를 생략하면 첫 번째 인수로 전달된 시작 인덱스부터 모든 요소를 제거한다.
*/

const arr5 = [1, 2, 3, 4];

// 원본 배열의 인덱스 1부터 모든 요소를 제거한다.
const result5 = arr5.splice(1);

// 원본 배열이 변경된다
console.log(arr5);  // [1]

// 제거한 요소가 배열로 반환된다.
console.log(result5); //  [2, 3, 4]


