/*
  함수를 호출할 때 매개변수의 개수만큼 인수를 전달하는 것이 바람직하지만 그렇지 않은 경우에도 에러가 발생하지 않는다.
  이는 자바스크립트 엔진이 매개변수의 개수와 인수의 개수를 체크하지 않기 때문이다.
  인수가 전달되지 않은 매개변수의 값은 undefined다. 이를 방치하면 다음 예제와 같이 의도치 않은 결과가 나올 수 있다.
*/

function sum1(x, y) {
  return x+y;
}

console.log(sum1(3));  // NaN

/*
  따라서 다음 예제와 같이 매개변수에 인수가 전달되었는지 확인하여 인수가 전달되지 않은 경우 매개변수에 기본값을 할당할 필요가 있다.
  즉, 방어 코드가 필요하다.
*/

function sum2(x, y) {

  // 인수가 전달되지 않아 매개변수의 값이 undefined인 경우 기본값을 할당한다.
  x = x || 0;
  y = y || 0;

  return x + y;
}

console.log(sum2(1, 2));  // 3
console.log(sum2(1)); // 1

// ES6 에서 도입된 매개변수 기본값을 사용하면 함수 내에서 수행하던 인수 체크 및 초기화를 간소화 할 수 있다.

function sum3(x = 0, y = 0) {
  return x +y ;
}

console.log(sum3(2, 3));  // 5
console.log(sum3(3)); // 3